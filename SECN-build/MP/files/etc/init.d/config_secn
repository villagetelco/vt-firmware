#!/bin/sh -x
# /etc/init.d/config_secn  

# This script creates various config files based on parameters in 
# /etc/config/secn, /etc/config/network and /etc/config/wireless
# The files created are:
#  /etc/asterisk/potato.sip.conf and potato.extensions.conf 

### Set up Asterisk config files
# Remove old files
rm /etc/asterisk/potato.sip.conf >> /dev/null
rm /etc/asterisk/potato.extensions.conf >> /dev/null

# Get the parameters from uci config file /etc/config/secn
ENABLE=`uci get secn.asterisk.enable`
REGISTER=`uci get secn.asterisk.register`
USERNAME=`uci get secn.asterisk.username`
FROMUSERNAME=`uci get secn.asterisk.fromusername`
SECRET=`uci get secn.asterisk.secret` # May be empty
HOST=`uci get secn.asterisk.host`
REGHOST=`uci get secn.asterisk.reghost`
#PROXY=`uci get secn.asterisk.proxy`
CODEC1=`uci get secn.asterisk.codec1`
CODEC2=`uci get secn.asterisk.codec2`
CODEC3=`uci get secn.asterisk.codec3`
DIALOUT=`uci get secn.asterisk.dialout`
ENABLENAT=`uci get secn.asterisk.enablenat`
EXTERNIP=`uci get secn.asterisk.externip`
SOFTPH=`uci get secn.asterisk.softph`

# Get localnet and netmask from br-lan settings
LOCALNET=`uci get network.lan.ipaddr | awk -F. '{print $1"."$2"."$3"."0}'`
LOCALNETMASK=`uci get network.lan.netmask`

# Get Asterisk SIP settings
if [ $ENABLE = "checked" ]; then
ENFLAG=" "
else
ENFLAG=";"
fi

if [ $REGISTER = "checked" ]; then
REGFLAG=" "
else
REGFLAG=";"
fi

if [ $ENABLENAT = "checked" ]; then
ENABLENATFLAG=" "
else
ENABLENATFLAG=";"
fi

# Check whether device is already at Softphone Master IP address
CURRENTOCTET4=`uci show network.lan.ipaddr | cut -d = -f 2 | cut -d . -f 4`

# If so, set new IP addr to default of .20 in case device is made non-Master
# and the user forgets to change the IP address in the web UI at the same time

if [ $CURRENTOCTET4 = "252" ]; then
OCTET4="20"
else
# Otherwise, use the current IP address
OCTET4="$CURRENTOCTET4"
fi

if [ $SOFTPH = "OFF" ]; then
SOFTPHFLAG=";"
SOFTPHMASTER=";"
SOFTPHCLIENT=";"
fi

if [ $SOFTPH = "CLIENT" ]; then
SOFTPHFLAG=";"
SOFTPHMASTER=";"
SOFTPHCLIENT=" "
fi

if [ $SOFTPH = "MASTER" ]; then
SOFTPHFLAG=" "
SOFTPHMASTER=" "
SOFTPHCLIENT=";"
# Default Softphone Master IP is <subnet>.252
OCTET4="252"
fi

# Set up the default Softphone Master IP address 
OCTET123=`uci show network.lan.ipaddr | cut -d = -f 2 | cut -d . -f 1,2,3`
# Default Softphone Master IP is .252
SOFTPHMASTERIP=$OCTET123.252

# Set up new device IP
DEVICEIP=$OCTET123.$OCTET4
uci set network.lan.ipaddr=$DEVICEIP

#--------------------------------------------

# Create new Asterisk sip.conf include file
# Everything from here to EOF will be written to the file
cat >> /etc/asterisk/potato.sip.conf << EOF

;-------------------------------
; /etc/asterisk/potato.sip.conf
; -----------------------------
; CAUTION: This is an automatically generated file by script /etc/init.d/config_secn
; Do not edit this file manually on a running system
; See /etc/config/secn for config parameters

; Configure for NAT if required
$ENABLENATFLAG localnet=$LOCALNET/$LOCALNETMASK                     
$ENABLENATFLAG externip=$EXTERNIP 

; Override default callerid of "asterisk" with MP hostname (MP-<ip-last-octet>)
callerid=MP-$OCTET4

; Register to VoIP Provider
$REGFLAG $ENFLAG register => $USERNAME:$SECRET@$REGHOST

[sipaccount]
$ENFLAG host=$HOST
$ENFLAG proxy=$PROXY			;TBD Check syntax
$ENFLAG secret=$SECRET
$ENFLAG username=$USERNAME
$ENFLAG fromuser=$USERNAME
$ENFLAG fromdomain=$REGHOST

insecure=port,invite
type=friend
disallow=all
allow=$CODEC1,$CODEC2,$CODEC3
dtmfmod=rfc2833
;qualify=yes
qualify=5000
canreinvite=no
nat=yes
context=incoming

; Softphone extensions
; This include file sets up definitions for using  
; softphone extensions for cell phones or PCs
$SOFTPHFLAG #include softphone.sip.conf

;----------------
EOF

#-----------------------------------------------------------

# Create new potato.extensions.conf include file
# Everything from here to EOF will be written to the file
cat >> /etc/asterisk/potato.extensions.conf << EOF

;-------------------------------------
; /etc/asterisk/potato.extensions.conf
; ------------------------------------ 

; Dialplan to support SIP client functionality
; CAUTION: This is an automatically generated file by script /etc/init.d/config_secn
; Do not edit this file manually on a running system
; See /etc/config/secn for config parameters

; Make external SIP / VoIP calls using [sipaccount] details
; Dial # for access, and then required number string
exten => _$DIALOUT.,1,Dial(SIP/\${EXTEN:1}@sipaccount,120,r)

; Softphone extensions mode
; This sets up definitions for using softphone extensions for cell phones or PCs. 
; Device is Master (registrar) or Client 

; For the Master device
$SOFTPHMASTER exten => _3XX,1,Dial(SIP/softph\${EXTEN})

; For the Client device
$SOFTPHCLIENT exten => _3XX,1,Dial(SIP/\${EXTEN}@$SOFTPHMASTERIP, 120, r)

;-------------------------------
EOF

# ------------------------------------------------------------------

# Set up WiFi 

# Get the params from uci config file /etc/config/secn and wireless
SSID=`uci get secn.accesspoint.ssid`
PASSPHRASE=`uci get secn.accesspoint.passphrase`
ENCRYPTION=`uci get secn.accesspoint.encryption`
AP_DISABLE=`uci get secn.accesspoint.ap_disable`
MAXASSOC=`uci get secn.accesspoint.maxassoc`
USREG_DOMAIN=`uci get secn.accesspoint.usreg_domain`
CHANNEL=`uci get wireless.radio0.channel`

# Set to WPA1 by default                                 
ENCRYPT="psk"

if [ $ENCRYPTION = "WPA2" ]; then                                   
ENCRYPT="psk2"
fi

if [ $ENCRYPTION = "WEP" ]; then                          
ENCRYPT="wep"                                                     
fi

if [ $ENCRYPTION = "NONE" ]; then                          
ENCRYPT="none"                                                      
fi

#Set up Reg Domain and Country Code for 11/13 channel working
if [ $USREG_DOMAIN = "checked" ]; then
  # set for 11 channel
  COUNTRY="840"
  REGDOMAIN="0x00"
else
  # Set for 13 channel
  COUNTRY="276"
  REGDOMAIN="0x35"
fi

# Check for invalid channel and regdomain combination
if [ $USREG_DOMAIN = "checked" ] && [ $CHANNEL -gt "11" ]; then
  # Set to default channel 1
  uci set wireless.radio0.channel=1
fi

uci set wireless.radio0.country=$COUNTRY
uci set wireless.radio0.regdomain=$REGDOMAIN

uci set wireless.ap_0.encryption=$ENCRYPT
uci set wireless.ap_0.key=$PASSPHRASE
uci set wireless.ap_0.ssid=$SSID
uci set wireless.ap_0.mode="ap"
uci set wireless.ap_0.disabled=$AP_DISABLE
uci set wireless.ap_0.maxassoc=$MAXASSOC

#----------------------------------------------
# Set up DHCP server
# Get the DHCP parameters from uci config file /etc/config/secn

DHCP_ENABLE=`uci get secn.dhcp.enable`

DHCP_AUTH_CHK=`uci get secn.dhcp.dhcp_auth`
if [ $DHCP_AUTH_CHK = "checked" ]; then
  DHCP_AUTH='1'
else
  DHCP_AUTH='0'
fi

STARTIP=`uci get secn.dhcp.startip | cut -d = -f 2 | cut -d . -f 4`
ENDIP=`uci get secn.dhcp.endip | cut -d = -f 2 | cut -d . -f 4`
LIMIT=$((ENDIP - STARTIP))

MAXLEASES=`uci get secn.dhcp.maxleases`
LEASETERM=`uci get secn.dhcp.leaseterm`
LEASETERM=$((LEASETERM / 60))'m'
DOMAIN=`uci get secn.dhcp.domain`
OPTION_DNS=`uci get secn.dhcp.dns`
OPTION_DNS2=`uci get secn.dhcp.dns2`
OPTION_SUBNET=`uci get secn.dhcp.subnet`
OPTION_ROUTER=`uci get secn.dhcp.router`

uci set dhcp.setup.dhcpleasemax=$MAXLEASES
uci set dhcp.setup.domain=$DOMAIN
uci set dhcp.setup.authoritative=$DHCP_AUTH

uci set dhcp.lan.start=$STARTIP
uci set dhcp.lan.limit=$LIMIT
uci set dhcp.lan.leasetime=$LEASETERM
uci set dhcp.lan.dhcp_option="1,$OPTION_SUBNET  3,$OPTION_ROUTER  6,$OPTION_DNS,$OPTION_DNS2"

#---------------------------------------------

# Set up WAN Port
# Get WAN settings
WANPORT=`uci get secn.wan.wanport`
ETHWANMODE=`uci get secn.wan.ethwanmode`
WANIP=`uci get secn.wan.wanip`
WANGATEWAY=`uci get secn.wan.wangateway`
WANMASK=`uci get secn.wan.wanmask`
WANDNS=`uci get secn.wan.wandns`
WANSSID=`uci get secn.wan.wanssid`
WANPASS=`uci get secn.wan.wanpass`
WANENCR=`uci get secn.wan.wanencr`

# Set up for WAN disabled
if [ $WANPORT = "Disable" ]; then
	uci set network.lan.ifname='eth0'

	uci set network.wan.ifname=''
	uci set network.wan.proto=''
	uci set network.wan.ipaddr=''
	uci set network.wan.gateway=''
	uci set network.wan.netmask=''
	uci set network.wan.dns=''

	uci set network.wan.service=''
	uci set network.wan.apn=''
	uci set network.wan.username=''
	uci set network.wan.password=''
	uci set network.wan.pin=''
	uci set network.wan.device=''

	uci set wireless.ah_0.disabled='0'
	uci set wireless.sta_0.disabled='1'
fi

if [ $WANPORT = "Ethernet" ]; then
 	# Set up for Eth WAN port
	uci set network.lan.ifname='eth9'   # This is just a dummy
	uci set network.lan.gateway='255.255.255.255'
	uci set network.wan.ifname='eth0' # Single Eth port devices
fi

if [ $WANPORT = "WiFi" ]; then
    uci set network.lan.gateway='255.255.255.255'
    # Set up for ath0 WAN port
	uci set wireless.ap_0.disabled='1'
	uci set wireless.ah_0.disabled='1'
	uci set wireless.sta_0.disabled='0'
	uci set wireless.sta_0.ssid=$WANSSID
	uci set wireless.sta_0.key=$WANPASS
	uci set wireless.sta_0.encryption=$WANENCR
	uci set network.wan.ifname='ath0'
fi


# Set up for DHCP or Static
if [ $ETHWANMODE = "Static" ]; then
	uci set network.wan.proto='static'
	uci set network.wan.ipaddr=$WANIP
	uci set network.wan.gateway=$WANGATEWAY
	uci set network.wan.netmask=$WANMASK
	uci set network.wan.dns=$WANDNS

else  # Set up for DHCP
	uci set network.wan.proto='dhcp'
	uci set network.wan.ipaddr=''
	uci set network.wan.gateway=''
	uci set network.wan.netmask=''
	uci set network.wan.dns=''
fi


# Make sure firewall is enabled
/etc/init.d/firewall enable  
#----------------------------------------------

# Set up web server security configuration

# Get checkbox values
AUTH=`uci get secn.http.auth`
LIMITIP=`uci get secn.http.limitip`
ENSSL=`uci get secn.http.enssl`

# Set up basic auth
if [ $AUTH = "checked" ]; then                          
  uci set uhttpd.main.config="/etc/http.conf"
else
  uci set uhttpd.main.config="/etc/http.conf.off"
fi


# Set up Restricted IP and SSL

if [ $LIMITIP != "checked" ] && [ $ENSSL != "checked" ]; then
  uci set uhttpd.main.listen_http="0.0.0.0:80"
  uci set uhttpd.main.listen_https=""
fi

if [ $LIMITIP = "checked" ] && [ $ENSSL != "checked" ]; then
  uci set uhttpd.main.listen_http="172.31.255.254:80"
  uci set uhttpd.main.listen_https=""
fi

if [ $LIMITIP != "checked" ] && [ $ENSSL = "checked" ]; then
      uci set uhttpd.main.listen_http=""                                                  
      uci set uhttpd.main.listen_https="0.0.0.0:443"
fi

if [ $LIMITIP = "checked" ] && [ $ENSSL = "checked" ]; then
    uci set uhttpd.main.listen_http=""
    uci set uhttpd.main.listen_https="172.31.255.254:443"
fi


# Save the changes 
uci commit uhttpd
uci commit dhcp
uci commit network
uci commit wireless
uci commit secn

sleep 1

# Note:Reboot for changes to be effective

#----------------------------------------------

